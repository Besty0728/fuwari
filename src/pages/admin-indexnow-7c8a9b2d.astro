---
import Layout from '../layouts/Layout.astro';
import MainGridLayout from '../layouts/MainGridLayout.astro';
import { Icon } from 'astro-icon/components';
---

<Layout title="管理面板">
  <M      console.log('Starting IndexNow submission to /api/indexnow-simple');
      const response = await fetch('/api/indexnow-simple', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        }
      });Layout>
    <div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative min-h-32">
      <div class="card-base z-10 px-9 py-6 relative w-full">
        <div class="absolute inset-0 bg-gradient-to-br from-[var(--primary)] via-[var(--primary)] to-[var(--secondary)] opacity-10"></div>
        
        <div class="relative">
          <div class="text-90 mb-2 font-bold text-black dark:text-white">
            <Icon name="material-symbols:admin-panel-settings" class="inline w-8 h-8 mb-1 mr-2" />
            IndexNow 搜索引擎收录管理
          </div>
          <div class="text-50 text-black/75 dark:text-white/75">
            🔒 私有管理面板 - 自动提交网站 URL 到搜索引擎，加快收录速度
          </div>
        </div>
      </div>
    </div>

    <div class="card-base">
      <div class="p-6">
        <h2 class="text-xl font-bold mb-4 flex items-center">
          <Icon name="material-symbols:settings" class="w-5 h-5 mr-2" />
          配置状态
        </h2>
        
        <div class="space-y-3 mb-6">
          <div class="flex items-center justify-between p-3 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
            <div class="flex items-center">
              <Icon name="material-symbols:check-circle" class="w-5 h-5 text-green-600 mr-2" />
              <span class="text-green-800 dark:text-green-200">密钥文件</span>
            </div>
            <span class="text-sm text-green-600 dark:text-green-400">751fa2696f5b4f5890799ca542b34fbb.txt</span>
          </div>
          
          <div class="flex items-center justify-between p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg border border-blue-200 dark:border-blue-800">
            <div class="flex items-center">
              <Icon name="material-symbols:link" class="w-5 h-5 text-blue-600 mr-2" />
              <span class="text-blue-800 dark:text-blue-200">站点地址</span>
            </div>
            <span class="text-sm text-blue-600 dark:text-blue-400">https://www.micostar.tech</span>
          </div>
        </div>

        <h3 class="text-lg font-semibold mb-3 flex items-center">
          <Icon name="material-symbols:rocket-launch" class="w-5 h-5 mr-2" />
          手动提交
        </h3>
        
        <div class="space-y-4">
          <button id="test-btn" class="w-full py-3 px-4 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center mb-3">
            <Icon name="material-symbols:bug-report" class="w-5 h-5 mr-2" />
            测试 API 连接
          </button>
          
          <button id="debug-btn" class="w-full py-3 px-4 bg-yellow-600 hover:bg-yellow-700 text-white rounded-lg font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center mb-3">
            <Icon name="material-symbols:bug-report" class="w-5 h-5 mr-2" />
            调试模式提交 (不发送真实请求)
          </button>
          
          <button id="submit-btn" class="w-full py-3 px-4 bg-[var(--primary)] hover:bg-[var(--primary)]/80 text-white rounded-lg font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center">
            <Icon name="material-symbols:upload" class="w-5 h-5 mr-2" />
            立即提交所有 URL
          </button>
          
          <div id="status" class="hidden p-4 rounded-lg"></div>
          <div id="results" class="hidden"></div>
        </div>

        <div class="mt-6 p-4 bg-gray-50 dark:bg-gray-800/50 rounded-lg">
          <h4 class="font-medium mb-2 flex items-center">
            <Icon name="material-symbols:info" class="w-4 h-4 mr-2" />
            自动提交说明
          </h4>
          <ul class="text-sm text-gray-600 dark:text-gray-400 space-y-1">
            <li>• 使用 <code class="bg-gray-200 dark:bg-gray-700 px-1 rounded">pnpm build:indexnow</code> 构建并自动提交</li>
            <li>• 新发布文章后会自动包含在下次提交中</li>
            <li>• 通过 IndexNow 协议提交到 api.indexnow.org</li>
            <li>• 支持 Bing、Yandex 等支持 IndexNow 的搜索引擎</li>
            <li>• 建议在内容更新后运行以加速搜索引擎收录</li>
          </ul>
        </div>
      </div>
    </div>
  </MainGridLayout>
</Layout>

<script>
  const testBtn = document.getElementById('test-btn');
  const debugBtn = document.getElementById('debug-btn');
  const submitBtn = document.getElementById('submit-btn');
  const statusDiv = document.getElementById('status');
  const resultsDiv = document.getElementById('results');

  // 测试 API 连接功能
  testBtn?.addEventListener('click', async () => {
    if (!testBtn || !statusDiv) return;
    
    testBtn.disabled = true;
    testBtn.innerHTML = '<svg class="animate-spin w-5 h-5 mr-2" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none" opacity="0.25"></circle><path fill="currentColor" opacity="0.75" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>测试中...';
    
    statusDiv.className = 'block p-4 rounded-lg bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800';
    statusDiv.innerHTML = '<div class="text-blue-800 dark:text-blue-200">🔍 正在测试 API 连接...</div>';
    resultsDiv.className = 'hidden';

    try {
      // 测试 GET 请求
      console.log('Testing GET /api/test');
      const getResponse = await fetch('/api/test', {
        method: 'GET'
      });
      
      console.log('GET response status:', getResponse.status, getResponse.statusText);
      console.log('GET response headers:', [...getResponse.headers.entries()]);
      
      let getResult;
      const getResponseText = await getResponse.text();
      console.log('GET response text:', getResponseText);
      
      try {
        getResult = JSON.parse(getResponseText);
      } catch (e) {
        getResult = { error: `Invalid JSON: ${getResponseText}` };
      }
      
      // 测试 POST 请求
      console.log('Testing POST /api/test');
      const postResponse = await fetch('/api/test', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ test: 'data' })
      });
      
      console.log('POST response status:', postResponse.status, postResponse.statusText);
      let postResult;
      const postResponseText = await postResponse.text();
      console.log('POST response text:', postResponseText);
      
      try {
        postResult = JSON.parse(postResponseText);
      } catch (e) {
        postResult = { error: `Invalid JSON: ${postResponseText}` };
      }
      
      // 显示结果
      if (getResponse.ok && postResponse.ok) {
        statusDiv.className = 'block p-4 rounded-lg bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800';
        statusDiv.innerHTML = `
          <div class="text-green-800 dark:text-green-200">
            ✅ API 连接测试成功！
            <details class="mt-2">
              <summary class="cursor-pointer font-medium">查看详细结果</summary>
              <div class="mt-2 space-y-2 text-sm">
                <div><strong>GET /api/test:</strong> HTTP ${getResponse.status} - ${JSON.stringify(getResult)}</div>
                <div><strong>POST /api/test:</strong> HTTP ${postResponse.status} - ${JSON.stringify(postResult)}</div>
              </div>
            </details>
          </div>
        `;
      } else {
        statusDiv.className = 'block p-4 rounded-lg bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800';
        statusDiv.innerHTML = `
          <div class="text-red-800 dark:text-red-200">
            ❌ API 连接测试失败
            <div class="mt-2 text-sm">
              <div>GET: HTTP ${getResponse.status} - ${JSON.stringify(getResult)}</div>
              <div>POST: HTTP ${postResponse.status} - ${JSON.stringify(postResult)}</div>
            </div>
          </div>
        `;
      }
    } catch (error) {
      console.error('API test error:', error);
      statusDiv.className = 'block p-4 rounded-lg bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800';
      statusDiv.innerHTML = `<div class="text-red-800 dark:text-red-200">❌ 测试错误：${error instanceof Error ? error.message : '未知错误'}</div>`;
    } finally {
      testBtn.disabled = false;
      testBtn.innerHTML = '<svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path></svg>测试 API 连接';
    }
  });

  // 调试模式提交功能
  debugBtn?.addEventListener('click', async () => {
    if (!debugBtn || !statusDiv || !resultsDiv) return;
    
    debugBtn.disabled = true;
    debugBtn.innerHTML = '<svg class="animate-spin w-5 h-5 mr-2" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none" opacity="0.25"></circle><path fill="currentColor" opacity="0.75" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>调试中...';
    
    statusDiv.className = 'block p-4 rounded-lg bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800';
    statusDiv.innerHTML = '<div class="flex items-center text-blue-800 dark:text-blue-200"><svg class="animate-spin w-4 h-4 mr-2" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none" opacity="0.25"></circle><path fill="currentColor" opacity="0.75" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>正在执行调试模式提交...</div>';

    try {
      console.log('Starting debug submission to /api/indexnow-debug');
      const response = await fetch('/api/indexnow-debug', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        }
      });

      console.log('Debug response:', response.status, response.statusText);
      const responseText = await response.text();
      console.log('Debug response text:', responseText);

      let result;
      if (!responseText || responseText.trim() === '') {
        result = { 
          success: false, 
          error: 'Empty response from debug server' 
        };
      } else {
        try {
          result = JSON.parse(responseText);
        } catch (jsonError) {
          throw new Error(`Invalid JSON response: ${jsonError instanceof Error ? jsonError.message : 'Unknown error'}`);
        }
      }
      
      if (result.success) {
        statusDiv.className = 'block p-4 rounded-lg bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800';
        statusDiv.innerHTML = `<div class="text-green-800 dark:text-green-200">✅ 调试模式提交成功！共模拟提交 ${result.totalUrls} 个 URL，${result.successful}/${result.submittedTo} 个搜索引擎响应成功</div>`;
        
        resultsDiv.className = 'block mt-4';
        resultsDiv.innerHTML = `
          <div class="bg-yellow-50 dark:bg-yellow-900/20 rounded-lg p-4 border border-yellow-200 dark:border-yellow-800">
            <div class="text-yellow-800 dark:text-yellow-200 font-medium mb-2">⚠️ 调试模式 - 未发送真实请求到搜索引擎</div>
            <div class="text-sm space-y-1">
              ${result.results.map((r) => {
                return `<div class="text-green-600">✅ ${new URL(r.endpoint).hostname}: ${r.statusText}</div>`;
              }).join('')}
            </div>
            <div class="text-xs text-gray-600 dark:text-gray-400 mt-2">
              时间戳: ${result.timestamp}<br>
              用户代理: ${result.userAgent || 'N/A'}
            </div>
          </div>
        `;
      } else {
        statusDiv.className = 'block p-4 rounded-lg bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800';
        statusDiv.innerHTML = `<div class="text-red-800 dark:text-red-200">❌ 调试模式提交失败：${result.error}</div>`;
        resultsDiv.className = 'hidden';
      }
    } catch (error) {
      console.error('Debug submission error:', error);
      statusDiv.className = 'block p-4 rounded-lg bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800';
      statusDiv.innerHTML = `<div class="text-red-800 dark:text-red-200">❌ 调试网络错误：${error instanceof Error ? error.message : '未知错误'}</div>`;
      resultsDiv.className = 'hidden';
    } finally {
      debugBtn.disabled = false;
      debugBtn.innerHTML = '<svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path></svg>调试模式提交 (不发送真实请求)';
    }
  });

  submitBtn?.addEventListener('click', async () => {
    if (!submitBtn || !statusDiv || !resultsDiv) return;
    
    // 禁用按钮并显示加载状态
    submitBtn.disabled = true;
    submitBtn.innerHTML = '<svg class="animate-spin w-5 h-5 mr-2" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none" opacity="0.25"></circle><path fill="currentColor" opacity="0.75" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>提交中...';
    
    statusDiv.className = 'block p-4 rounded-lg bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800';
    statusDiv.innerHTML = '<div class="flex items-center text-blue-800 dark:text-blue-200"><svg class="animate-spin w-4 h-4 mr-2" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none" opacity="0.25"></circle><path fill="currentColor" opacity="0.75" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>正在提交 URL 到搜索引擎...</div>';
    
    try {
      const response = await fetch('/api/indexnow', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });
      
      // 检查响应状态
      if (!response.ok) {
        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
      }
      
      // 安全地解析 JSON
      let result;
      try {
        const responseText = await response.text();
        result = responseText.trim() ? JSON.parse(responseText) : { 
          success: false, 
          error: 'Empty response from server' 
        };
      } catch (jsonError) {
        throw new Error(`Invalid JSON response: ${jsonError instanceof Error ? jsonError.message : 'Unknown error'}`);
      }
      
      if (result.success) {
        statusDiv.className = 'block p-4 rounded-lg bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800';
        statusDiv.innerHTML = `<div class="text-green-800 dark:text-green-200">✅ 提交成功！共向 IndexNow 提交 ${result.totalUrls} 个 URL</div>`;
        
        // 显示详细结果
        resultsDiv.className = 'block mt-4';
        resultsDiv.innerHTML = `
          <div class="bg-gray-50 dark:bg-gray-800/50 rounded-lg p-4">
            <h5 class="font-medium mb-2">提交详情：</h5>
            <div class="text-sm space-y-1">
              <div class="text-green-600">✅ api.indexnow.org: HTTP ${result.status} - ${result.statusText}</div>
              <div class="text-xs text-gray-600 dark:text-gray-400 mt-2">
                提交时间: ${result.submittedAt}<br>
                ${result.responseBody ? `响应内容: ${result.responseBody}` : '无响应内容 (正常情况)'}
              </div>
            </div>
            <details class="mt-3">
              <summary class="cursor-pointer text-sm text-gray-600 dark:text-gray-400">查看提交的 URL (${result.totalUrls} 个)</summary>
              <div class="mt-2 max-h-40 overflow-y-auto text-xs text-gray-500 dark:text-gray-400 space-y-1">
                ${result.urls.map((url: string) => `<div>${url}</div>`).join('')}
              </div>
            </details>
          </div>
        `;
      } else {
        statusDiv.className = 'block p-4 rounded-lg bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800';
        statusDiv.innerHTML = `<div class="text-red-800 dark:text-red-200">❌ 提交失败：${result.error}</div>`;
        resultsDiv.className = 'hidden';
      }
    } catch (error) {
      statusDiv.className = 'block p-4 rounded-lg bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800';
      statusDiv.innerHTML = `<div class="text-red-800 dark:text-red-200">❌ 网络错误：${error instanceof Error ? error.message : '未知错误'}</div>`;
      resultsDiv.className = 'hidden';
    } finally {
      // 恢复按钮状态
      submitBtn.disabled = false;
      submitBtn.innerHTML = '<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path></svg>立即提交所有 URL';
    }
  });
</script>